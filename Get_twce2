#http://www.twse.com.tw/exchangeReport/STOCK_DAY?date=20180817&stockNo=2330  取一個月的股價與成交量
#https://sites.google.com/site/zsgititit/home/python-cheng-shi-she-ji/shi-yongpython-zhua-qu-tai-gu-zheng-jiao-suo-mei-ri-gu-jia-zi-liao-yu-shi-yongpandas-jin-xing-fen-xi
#DataFram使用, http://justimchung.blogspot.com/2018/06/pandas-dataframe.html

import numpy as np
import requests
import pandas as pd
import datetime

def get_stock_history(date, stock_no):
    quotes = []
    url = 'http://www.twse.com.tw/exchangeReport/STOCK_DAY?date=%s&stockNo=%s' % ( date, stock_no)
    r = requests.get(url, verify=False)
    data = r.json()
    return transform(data['data'])  #進行資料格式轉換

def transform_date(date):
        y, m, d = date.split('/')
        return str(int(y)+1911) + '/' + m  + '/' + d  #民國轉西元
    
def transform_data(data):
    data[0] = datetime.datetime.strptime(transform_date(data[0]), '%Y/%m/%d')
    data[1] = int(data[1].replace(',', ''))  #把千進位的逗點去除
    data[2] = int(data[2].replace(',', ''))
    data[3] = float(data[3].replace(',', ''))
    data[4] = float(data[4].replace(',', ''))
    data[5] = float(data[5].replace(',', ''))
    data[6] = float(data[6].replace(',', ''))
    data[7] = float(0.0 if data[7].replace(',', '') == 'X0.00' else data[7].replace(',', ''))  # +/-/X表示漲/跌/不比價
    data[8] = int(data[8].replace(',', ''))
    return data

def transform(data):
    return [transform_data(d) for d in data]

def create_df(date,stock_no):
    s = pd.DataFrame(get_stock_history(date, stock_no))
    s.columns = ['date', 'shares', 'amount', 'open', 'high', 'low', 'close', 'change', 'turnover']
                #"日期","成交股數","成交金額","開盤價","最高價","最低價","收盤價","漲跌價差","成交筆數" 
    stock = []
    for i in range(len(s)):
        stock.append(stock_no)
    s['stockno'] = pd.Series(stock ,index=s.index)  #新增股票代碼欄，之後所有股票進入資料表才能知道是哪一張股票
    datelist = []
    for i in range(len(s)):
        datelist.append(s['date'][i])
    s.index = datelist  #索引值改成日期
    s2 = s.drop(['date'],axis = 1)  #刪除日期欄位
    mlist = []
    for item in s2.index:
        mlist.append(item.month)
    s2['month'] = mlist  #新增月份欄位
    return s2
        
listDji = ['2330']
for i in range(len(listDji)):
    result = create_df('20180310', listDji[i])
    print(result)
    
print(result.groupby('month').close.count())  #每個月幾個營業日
print(result.groupby('month').shares.sum())  #每個月累計成交股數
###################################################################################### Plot
from matplotlib import pyplot as plt
import matplotlib.dates as mdates    #處理日期

plt.plot(result.get('high'), label="high", color='k', linestyle='dashed', linewidth=1)
plt.plot(result.get('low'), label="low", color=[1.0, 0.6, 0.8], linestyle='dashed', linewidth=1)

plt.gca().xaxis.set_major_formatter(mdates.DateFormatter('%Y-%m'))  #設定x軸主刻度顯示格式（日期）
plt.gca().xaxis.set_major_locator(mdates.DayLocator(interval=5))   #設定x軸主刻度間距
plt.xlabel('Date') # naming the x axis 
plt.ylabel('open') # naming the y axis 
#plt.title('Array#2 - Current Consumption')  # giving a title to my graph 
#plt.legend()
plt.show()

###################################################################################### DataFram Usage
# Get Row
Row1 = result[1:2] 
print ('Row1')
print (Row1)
# Get Column
Column1 = result[['open', 'high']]
print ('Column1')
print (Column1)
# Get item
#Item1 = result.at['open','high'] # 取得 'e1234567' 這位學生的名字
Item1 = result.iat[3,1] # 取得 'e1234567' 這位學生的名字
print ('Item1')
print (Item1)

###################################################################################### Get Avg in DataFram
result_mean = pd.DataFrame(result.mean(0))
result_mean_trans = result_mean.T
print (result_mean_trans)
###################################################################################### 
a1 = []
a2 = []
a1 = np.array(result.get('high'))
a2 = result.get('low')
print ('------------------------------------')
print (a1)
print ('------------------------------------')
print (a2)

